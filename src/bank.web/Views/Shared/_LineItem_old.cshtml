@model LineItemViewModel
@{
    var padding = string.Format("padding-left: {0}px", Model.Level * 30 + 15);
}

@if (!Model.LineItem.Label.StartsWith("#"))
{
<tr class="@Html.Raw(Model.LineItem.MDRM != null ? "mdrm-row" : "")" data-url="/modals/mdrm/definition/@Model.LineItem.MDRM">

    <td style="@padding;">
        
        @if (Model.LineItem.Type == "section")
        {
            @Html.Raw("<h2>")
        }

        @if (Model.Level == 0)
        {
            <text>
                @Html.Raw("<b>")
            </text>
        }

        @Model.LineItem.Label
        @if (Model.Report.DebugMode)
        { <small>[@Model.LineItem.LineNumber] </small> }

        @if (Model.LineItem.SubTemplate != null)
        {

            @Model.LineItem.SubTemplate
        }

        @if (Model.Level == 0)
        {
            <text>
                @Html.Raw("</b>")
            </text>
        }

        @if (Model.LineItem.Type == "section")
        {
            @Html.Raw("</h2>")
        }

    </td>
    @for (int c = 0; c < Model.LineItem.Concepts.Count; c++)
    {
        var fact = Model.Report.GetFact(Model.LineItem.Concepts[c].MDRM, 0);
        var mdrm = Model.LineItem.Concepts[c].MDRM;

        for (int cf = 0; cf < Model.Report.Columns.Count; cf++)
        {

            if (string.IsNullOrWhiteSpace(mdrm))
            {
                continue;
            }

            var columnFact = Model.Report.GetFact(mdrm, cf);

            <td align="right" data-data="@Model.FactHistoricalData(columnFact).ToJson()" data-toggle="popover" style="@Model.TrendingColor(columnFact);" 
                class="fact-column lineitem-cell px-1 @General.TrendingClass(columnFact)">
                @if (columnFact != null)
                {
                    if (columnFact.TrendRatio.HasValue)
                    {
                        <div class="float-xs-left trending-percent text-xs-center">
                            @if (!columnFact.Trend.HasValue)
                            {
                                <div aria-hidden="true">&mdash;</div>
                            }
                            else if (columnFact.Trend.Value)
                            {
                                <div class="fa fa-arrow-up fa-fw" aria-hidden="true"></div>
                            }
                            else
                            {
                                <div class="fa fa-arrow-down fa-fw" aria-hidden="true"></div>
                            }
                            <div>@Math.Round(columnFact.TrendRatio.Value, 3).ToString("P1")</div>

                        </div>
                    }

                    @columnFact.ValueFormatted

                    if (Model.Report.DebugMode)
                    { <small>@mdrm</small>}
                }

            </td>
        }
    }


</tr>
}

@foreach (var subLineItem in Model.LineItem.LineItems)
{
    <text>
        @Html.Partial("_LineItem", new LineItemViewModel { Level = Model.Level + 1, Report = Model.Report, LineItem = subLineItem })
    </text>
}